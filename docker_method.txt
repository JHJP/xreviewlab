[Python Script 및 Docker를 이용한 데이터 전처리 및 Azure VM 배포 절차]

< Docker Image 생성 방법 >


4. 도커 이미지 빌드하기
   - 프로젝트 디렉토리로 이동 후 명령어 실행:
     docker build -t my_mvp_project:v1 .
   - -t: 이미지 이름 및 태그 설정(my_mvp_project:v1)
   - . : Dockerfile 위치(현재 디렉토리)
   - 이미지 빌드 확인:
     docker images

< Azure VM에서 실행하기 >

5. Docker Hub를 사용한 배포
   - Docker Hub 로그인:
     docker login
   - 이미지 태그 변경:
     docker tag my_mvp_project:v1 jiheonpark460/my_mvp_project:v1
   - Docker Hub에 이미지 Push:
     docker push jiheonpark460/my_mvp_project:v1

6. Azure VM Docker 설치 및 컨테이너 실행

   6.1 Docker 설치
   - SSH 접속:
     - VS Code → Ctrl + Shift + P → SSH 검색 → Public IP 입력 → 연결.
     - config 파일에 PEM 키 등록(research-vm-key-01.pem).
   - Linux VM(Ubuntu) 예시:
     sudo apt-get update
     sudo apt-get install -y docker.io
     sudo systemctl start docker
     sudo systemctl enable docker

   6.2 Docker Hub에서 이미지 Pull
     sudo docker pull jiheonpark460/my_mvp_project:v1

   6.3 컨테이너 실행
     sudo docker run -d -p 80:5000 --name myMvpContainer jiheonpark460/my_mvp_project:v1

   - -d: 백그라운드 모드 실행
   - --name: 컨테이너 이름 설정(myDataContainer)

< 사이트 접속 >
http://48.217.84.149/

< 유용한 Docker 명령어 >
- 컨테이너 상태 확인: sudo docker ps -a
- 실시간 로그 확인: sudo docker logs -f myMvpContainer
- 컨테이너 종료: sudo docker stop myMvpContainer
- 컨테이너 시작: sudo docker start myMvpContainer
- 컨테이너 삭제: sudo docker rm myMvpContainer
- 컨테이너 로그 삭제: sudo sh -c "cat /dev/null > $(sudo docker inspect --format='{{.LogPath}}' <container_id>)"
- 컨테이너 로그 크기 출력: sudo ls -lh $(sudo docker inspect --format='{{.LogPath}}' <container_id>)